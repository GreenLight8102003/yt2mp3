<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>YouTube to MP3 Converter</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap" rel="stylesheet">
</head>
<style>
    body {
        font-family: 'Poppins', sans-serif;
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        margin: 0;
        background: linear-gradient(135deg, #ff416c 0%, #ff4b2b 100%);
    }
    .container {
        text-align: center;
        background-color: rgba(255, 255, 255, 0.95);
        padding: 5%;
        border-radius: 40px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
        max-width: 90%;
        width: 600px;
        backdrop-filter: blur(15px);
    }
    .header {
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 5%;
    }
    h1 {
        color: #ff416c;
        font-size: clamp(24px, 5vw, 42px);
        text-shadow: 3px 3px 6px rgba(0,0,0,0.2);
        font-weight: 800;
        letter-spacing: 2px;
        text-transform: uppercase;
        margin: 0 0 0 20px;
        display: flex;
        align-items: center;
        background: linear-gradient(to right, #ff416c, #ff4b2b);
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        animation: colorChange 5s infinite alternate, titleAnimation 1s ease-in-out;
        transition: transform 0.3s ease;
    }
    h1:hover {
        transform: scale(1.05);
        animation: wobble 0.5s ease-in-out;
    }
    @keyframes colorChange {
        0% {
            filter: hue-rotate(0deg);
        }
        100% {
            filter: hue-rotate(360deg);
        }
    }
    @keyframes titleAnimation {
        0% {
            opacity: 0;
            transform: translateY(-20px);
        }
        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }
    @keyframes wobble {
        0%, 100% { transform: translateX(0); }
        25% { transform: translateX(-5px) rotate(-5deg); }
        75% { transform: translateX(5px) rotate(5deg); }
    }
    .search-box {
        display: flex;
        margin-bottom: 5%;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
        border-radius: 50px;
        overflow: hidden;
        border: 3px solid #ff416c;
        transition: all 0.4s ease;
    }
    .search-box:focus-within {
        transform: translateY(-5px);
        box-shadow: 0 15px 25px rgba(0, 0, 0, 0.2);
    }
    input[type="text"] {
        flex-grow: 1;
        padding: 3% 4%;
        font-size: clamp(14px, 3vw, 18px);
        border: none;
        outline: none;
        font-family: 'Poppins', sans-serif;
    }
    button {
        background: linear-gradient(to right, #ff416c, #ff4b2b);
        color: white;
        border: none;
        padding: 3% 5%;
        font-size: clamp(14px, 3vw, 18px);
        cursor: pointer;
        transition: all 0.4s ease;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 1px;
    }
    button:hover {
        background: linear-gradient(to right, #ff4b2b, #ff416c);
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(255, 65, 108, 0.4);
    }
    .logo {
        width: clamp(50px, 10vw, 80px);
        height: clamp(50px, 10vw, 80px);
        filter: drop-shadow(0 5px 10px rgba(0,0,0,0.2));
        background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%23FF416C"><path d="M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z"/></svg>');
        background-repeat: no-repeat;
        background-position: center;
        background-size: contain;
        animation: pulse 2s infinite;
        margin-right: 20px;
    }
    @keyframes pulse {
        0% {
            transform: scale(1);
        }
        50% {
            transform: scale(1.1);
        }
        100% {
            transform: scale(1);
        }
    }
    .tagline {
        font-size: clamp(16px, 3vw, 20px);
        color: #444;
        margin-bottom: 4%;
        font-weight: 400;
        line-height: 1.5;
        text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
    }
    .video-preview {
        margin-top: 4%;
        display: none;
    }
    .video-preview iframe {
        width: 100%;
        height: 315px;
        border-radius: 20px;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
    }

    .success-message, .error-message {
        margin-top: 5%;
        padding: 5%;
        border-radius: 30px;
        animation: fadeIn 0.8s ease-in-out;
        box-shadow: 0 20px 40px rgba(255, 65, 108, 0.2);
        transition: all 0.5s ease;
        position: relative;
        overflow: hidden;
        background: linear-gradient(135deg, #FF416C, #FF4B2B);
        border: 2px solid rgba(255, 255, 255, 0.1);
    }
    .success-message {
        background: linear-gradient(135deg, #FF416C, #FF6B6B);
    }
    .error-message {
        background: linear-gradient(135deg, #FF416C, #FF1744);
    }
    .success-message::before, .error-message::before {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(circle, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0) 70%);
        transform: rotate(45deg);
        pointer-events: none;
    }
    .success-message h2, .error-message h2 {
        margin-top: 0;
        font-size: clamp(20px, 4vw, 32px);
        color: white;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        letter-spacing: 2px;
        font-weight: 700;
    }
    .success-message p, .error-message p {
        margin: 4% 0;
        font-size: clamp(14px, 3vw, 18px);
        color: rgba(255, 255, 255, 0.9);
        line-height: 1.8;
        font-weight: 300;
    }
    .success-message a, .error-message a {
        display: inline-block;
        margin-top: 4%;
        padding: 3% 5%;
        background-color: rgba(255, 255, 255, 0.95);
        color: #FF416C;
        text-decoration: none;
        border-radius: 50px;
        font-weight: 600;
        transition: all 0.4s ease;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        text-transform: uppercase;
        letter-spacing: 2px;
        font-size: clamp(12px, 2vw, 14px);
    }
    .success-message a:hover, .error-message a:hover {
        transform: translateY(-5px) scale(1.05);
        box-shadow: 0 15px 30px rgba(255, 65, 108, 0.4);
        background-color: white;
        color: #FF1744;
    }
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(40px); }
        to { opacity: 1; transform: translateY(0); }
    }
    .success-message:hover, .error-message:hover {
        transform: translateY(-10px) scale(1.03);
        box-shadow: 0 25px 60px rgba(255, 65, 108, 0.3);
    }
    @media (max-width: 600px) {
        .container {
            padding: 8%;
        }
        .search-box {
            flex-direction: column;
        }
        input[type="text"], button {
            width: 100%;
            padding: 4% 5%;
        }
        button {
            border-radius: 0 0 50px 50px;
        }
    }
</style>
<body>
    <div class="container">
        <div class="header">
            <h1><div class="logo"></div>YouTube to MP3</h1>
        </div>
        <p class="tagline">Convert your favorite YouTube videos to MP3 audio files with just one click!</p>
        <form action="/convert-mp3" method="POST">
            <div class="search-box">
                <input type="text" name="videoUrl" id="videoUrl" placeholder="Paste YouTube URL here" required value="<%= typeof videoUrl !== 'undefined' ? videoUrl : '' %>">
                <button type="submit">Convert</button>
            </div>
        </form>
        <div class="video-preview" id="videoPreview"></div>
        <% if (typeof success !== 'undefined' && success) { %>
            <div class="success-message">
                <h2><%= message %></h2>
                <p>Song Title: <%= song_title %></p>
                <p>Song Link: <a href="<%= song_link %>" target="_blank">Download</a></p>
            </div>
        <% } else if (typeof success !== 'undefined' && !success) { %>
            <div class="error-message">
                <h2><%= message %></h2>
                <a href="/">Go Back</a>
            </div>
        <% } %>
    </div>
    <script>
        function updateVideoPreview() {
            const videoUrl = document.getElementById('videoUrl').value;
            const videoId = extractVideoId(videoUrl);
            if (videoId) {
                const embedUrl = `https://www.youtube.com/embed/${videoId}`;
                document.getElementById('videoPreview').innerHTML = `<iframe width="560" height="315" src="${embedUrl}" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>`;
                document.getElementById('videoPreview').style.display = 'block';
            } else {
                document.getElementById('videoPreview').style.display = 'none';
            }
        }

        document.getElementById('videoUrl').addEventListener('input', updateVideoPreview);

        function extractVideoId(url) {
            const regExp = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/;
            const match = url.match(regExp);
            return (match && match[2].length === 11) ? match[2] : null;
        }

        // Call updateVideoPreview on page load to show preview if URL is present
        window.onload = updateVideoPreview;
    </script>
</body>
</html>
